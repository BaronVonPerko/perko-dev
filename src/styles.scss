@use '@angular/material' as mat;

@import url('https://fonts.googleapis.com/css2?family=Roboto&family=Roboto+Mono:wght@100;300;500;700&display=swap');
@import 'prismjs/plugins/toolbar/prism-toolbar.css';
@import 'prismjs/themes/prism-okaidia.css';

:root {
  --perko-page-width: 1400px;
  --perko-post-width: 800px;
  --perko-card-subtitle-align: left;
   --mdc-outlined-card-container-color: mat.get-theme-color($light-theme, primary, 50);
}

$light-theme: mat.define-theme((
  color: (
    theme-type: light,
    primary: mat.$cyan-palette,
    tertiary: mat.$orange-palette,
  ),
));

$dark-theme: mat.define-theme((
  color: (
    theme-type: dark,
    primary: mat.$cyan-palette,
    tertiary: mat.$orange-palette,
  ),
));


html {
  background-color: mat.get-theme-color($light-theme, primary, 50);
}

body {
  margin: 0;
  padding: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
  @include mat.all-component-themes($light-theme);
}

main.dark-theme {
  @include mat.all-component-themes($dark-theme);

  a:hover {
    color: mat.get-theme-color($light-theme, primary, 90);
  }
}

@include mat.core();

.light-theme .mdc-button.button-nav-active {
  background-color: mat.get-theme-color($light-theme, primary, 90);
}

.dark-theme .mdc-button.button-nav-active {
  background-color: mat.get-theme-color($dark-theme, primary, 20);
}

.analog-markdown {
  blockquote {
    @include mat.elevation(3);
    border-left: 4px solid mat.get-theme-color($light-theme, primary, 60);
    padding: 1em;
  }

  pre {
    @include mat.elevation(3);
  }
}

a {
  text-decoration: none;
  color: mat.get-theme-color($light-theme, primary, 60);

  &:hover {
    color: mat.get-theme-color($light-theme, primary, 30);
  }

  &:visited {
    color: mat.get-theme-color($light-theme, primary, 60);
  }
}

analog-markdown, p {
  line-height: 1.5;
}

@mixin color($theme) {
  .bg-primary {
    background-color: mat.get-theme-color($theme, primary, 50);
  }
}
@include color($light-theme);
